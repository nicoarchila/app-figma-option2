{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCanonicalHeaders } from './getCanonicalHeaders';\nimport { getCanonicalQueryString } from './getCanonicalQueryString';\nimport { getCanonicalUri } from './getCanonicalUri';\nimport { getHashedPayload } from './getHashedPayload';\nimport { getSignedHeaders } from './getSignedHeaders';\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nexport var getCanonicalRequest = function getCanonicalRequest(_a) {\n  var body = _a.body,\n    headers = _a.headers,\n    method = _a.method,\n    url = _a.url;\n  return [method, getCanonicalUri(url.pathname), getCanonicalQueryString(url.searchParams), getCanonicalHeaders(headers), getSignedHeaders(headers), getHashedPayload(body)].join('\\n');\n};","map":{"version":3,"names":["getCanonicalHeaders","getCanonicalQueryString","getCanonicalUri","getHashedPayload","getSignedHeaders","getCanonicalRequest","_a","body","headers","method","url","pathname","searchParams","join"],"sources":["/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCanonicalHeaders } from './getCanonicalHeaders';\nimport { getCanonicalQueryString } from './getCanonicalQueryString';\nimport { getCanonicalUri } from './getCanonicalUri';\nimport { getHashedPayload } from './getHashedPayload';\nimport { getSignedHeaders } from './getSignedHeaders';\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nexport var getCanonicalRequest = function (_a) {\n    var body = _a.body, headers = _a.headers, method = _a.method, url = _a.url;\n    return [\n        method,\n        getCanonicalUri(url.pathname),\n        getCanonicalQueryString(url.searchParams),\n        getCanonicalHeaders(headers),\n        getSignedHeaders(headers),\n        getHashedPayload(body),\n    ].join('\\n');\n};\n"],"mappings":"AAAA;AACA;AACA,SAASA,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAaC,EAAE,EAAE;EAC3C,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI;IAAEC,OAAO,GAAGF,EAAE,CAACE,OAAO;IAAEC,MAAM,GAAGH,EAAE,CAACG,MAAM;IAAEC,GAAG,GAAGJ,EAAE,CAACI,GAAG;EAC1E,OAAO,CACHD,MAAM,EACNP,eAAe,CAACQ,GAAG,CAACC,QAAQ,CAAC,EAC7BV,uBAAuB,CAACS,GAAG,CAACE,YAAY,CAAC,EACzCZ,mBAAmB,CAACQ,OAAO,CAAC,EAC5BJ,gBAAgB,CAACI,OAAO,CAAC,EACzBL,gBAAgB,CAACI,IAAI,CAAC,CACzB,CAACM,IAAI,CAAC,IAAI,CAAC;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}