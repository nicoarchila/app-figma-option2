{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function serializeAws_json1_1AddTagsToStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateStreamCommand = function serializeAws_json1_1CreateStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.CreateStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function serializeAws_json1_1DecreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteStreamCommand = function serializeAws_json1_1DeleteStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeleteStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function serializeAws_json1_1DeregisterStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLimitsCommand = function serializeAws_json1_1DescribeLimitsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamCommand = function serializeAws_json1_1DescribeStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function serializeAws_json1_1DescribeStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function serializeAws_json1_1DescribeStreamSummaryCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function serializeAws_json1_1DisableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function serializeAws_json1_1EnableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetRecordsCommand = function serializeAws_json1_1GetRecordsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetShardIteratorCommand = function serializeAws_json1_1GetShardIteratorCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function serializeAws_json1_1IncreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListShardsCommand = function serializeAws_json1_1ListShardsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamConsumersCommand = function serializeAws_json1_1ListStreamConsumersCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamsCommand = function serializeAws_json1_1ListStreamsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsForStreamCommand = function serializeAws_json1_1ListTagsForStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1MergeShardsCommand = function serializeAws_json1_1MergeShardsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.MergeShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordCommand = function serializeAws_json1_1PutRecordCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordsCommand = function serializeAws_json1_1PutRecordsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function serializeAws_json1_1RegisterStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function serializeAws_json1_1RemoveTagsFromStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SplitShardCommand = function serializeAws_json1_1SplitShardCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SplitShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function serializeAws_json1_1StartStreamEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function serializeAws_json1_1StopStreamEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SubscribeToShardCommand = function serializeAws_json1_1SubscribeToShardCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateShardCountCommand = function serializeAws_json1_1UpdateShardCountCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function deserializeAws_json1_1AddTagsToStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function deserializeAws_json1_1AddTagsToStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateStreamCommand = function deserializeAws_json1_1CreateStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1CreateStreamCommandError = function deserializeAws_json1_1CreateStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteStreamCommand = function deserializeAws_json1_1DeleteStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteStreamCommandError = function deserializeAws_json1_1DeleteStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function deserializeAws_json1_1DeregisterStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeLimitsCommand = function deserializeAws_json1_1DescribeLimitsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsCommandError = function deserializeAws_json1_1DescribeLimitsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamCommand = function deserializeAws_json1_1DescribeStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamCommandError = function deserializeAws_json1_1DescribeStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function deserializeAws_json1_1DescribeStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function deserializeAws_json1_1DescribeStreamSummaryCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function deserializeAws_json1_1DisableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function deserializeAws_json1_1EnableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetRecordsCommand = function deserializeAws_json1_1GetRecordsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetRecordsCommandError = function deserializeAws_json1_1GetRecordsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetShardIteratorCommand = function deserializeAws_json1_1GetShardIteratorCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetShardIteratorCommandError = function deserializeAws_json1_1GetShardIteratorCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListShardsCommand = function deserializeAws_json1_1ListShardsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListShardsCommandError = function deserializeAws_json1_1ListShardsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function deserializeAws_json1_1ListStreamConsumersCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function deserializeAws_json1_1ListStreamConsumersCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamsCommand = function deserializeAws_json1_1ListStreamsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamsCommandError = function deserializeAws_json1_1ListStreamsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function deserializeAws_json1_1ListTagsForStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function deserializeAws_json1_1ListTagsForStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1MergeShardsCommand = function deserializeAws_json1_1MergeShardsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1MergeShardsCommandError = function deserializeAws_json1_1MergeShardsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordCommand = function deserializeAws_json1_1PutRecordCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordCommandError = function deserializeAws_json1_1PutRecordCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordsCommand = function deserializeAws_json1_1PutRecordsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordsCommandError = function deserializeAws_json1_1PutRecordsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function deserializeAws_json1_1RegisterStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function deserializeAws_json1_1RemoveTagsFromStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SplitShardCommand = function deserializeAws_json1_1SplitShardCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SplitShardCommandError = function deserializeAws_json1_1SplitShardCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function deserializeAws_json1_1StartStreamEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function deserializeAws_json1_1StartStreamEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function deserializeAws_json1_1StopStreamEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function deserializeAws_json1_1StopStreamEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SubscribeToShardCommand = function deserializeAws_json1_1SubscribeToShardCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardCommandError = function deserializeAws_json1_1SubscribeToShardCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1UpdateShardCountCommand = function deserializeAws_json1_1UpdateShardCountCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountCommandError = function deserializeAws_json1_1UpdateShardCountCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_json1_1AddTagsToStreamInput = function serializeAws_json1_1AddTagsToStreamInput(input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Tags !== undefined && input.Tags !== null && {\n    Tags: serializeAws_json1_1TagMap(input.Tags, context)\n  });\n};\nvar serializeAws_json1_1CreateStreamInput = function serializeAws_json1_1CreateStreamInput(input, context) {\n  return __assign(__assign({}, input.ShardCount !== undefined && input.ShardCount !== null && {\n    ShardCount: input.ShardCount\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeleteStreamInput = function serializeAws_json1_1DeleteStreamInput(input, context) {\n  return __assign(__assign({}, input.EnforceConsumerDeletion !== undefined && input.EnforceConsumerDeletion !== null && {\n    EnforceConsumerDeletion: input.EnforceConsumerDeletion\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function serializeAws_json1_1DeregisterStreamConsumerInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeLimitsInput = function serializeAws_json1_1DescribeLimitsInput(input, context) {\n  return {};\n};\nvar serializeAws_json1_1DescribeStreamConsumerInput = function serializeAws_json1_1DescribeStreamConsumerInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeStreamInput = function serializeAws_json1_1DescribeStreamInput(input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DescribeStreamSummaryInput = function serializeAws_json1_1DescribeStreamSummaryInput(input, context) {\n  return __assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function serializeAws_json1_1DisableEnhancedMonitoringInput(input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function serializeAws_json1_1EnableEnhancedMonitoringInput(input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1GetRecordsInput = function serializeAws_json1_1GetRecordsInput(input, context) {\n  return __assign(__assign({}, input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.ShardIterator !== undefined && input.ShardIterator !== null && {\n    ShardIterator: input.ShardIterator\n  });\n};\nvar serializeAws_json1_1GetShardIteratorInput = function serializeAws_json1_1GetShardIteratorInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.ShardIteratorType !== undefined && input.ShardIteratorType !== null && {\n    ShardIteratorType: input.ShardIteratorType\n  }), input.StartingSequenceNumber !== undefined && input.StartingSequenceNumber !== null && {\n    StartingSequenceNumber: input.StartingSequenceNumber\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListShardsInput = function serializeAws_json1_1ListShardsInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.ShardFilter !== undefined && input.ShardFilter !== null && {\n    ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context)\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListStreamConsumersInput = function serializeAws_json1_1ListStreamConsumersInput(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1ListStreamsInput = function serializeAws_json1_1ListStreamsInput(input, context) {\n  return __assign(__assign({}, input.ExclusiveStartStreamName !== undefined && input.ExclusiveStartStreamName !== null && {\n    ExclusiveStartStreamName: input.ExclusiveStartStreamName\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  });\n};\nvar serializeAws_json1_1ListTagsForStreamInput = function serializeAws_json1_1ListTagsForStreamInput(input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartTagKey !== undefined && input.ExclusiveStartTagKey !== null && {\n    ExclusiveStartTagKey: input.ExclusiveStartTagKey\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MergeShardsInput = function serializeAws_json1_1MergeShardsInput(input, context) {\n  return __assign(__assign(__assign({}, input.AdjacentShardToMerge !== undefined && input.AdjacentShardToMerge !== null && {\n    AdjacentShardToMerge: input.AdjacentShardToMerge\n  }), input.ShardToMerge !== undefined && input.ShardToMerge !== null && {\n    ShardToMerge: input.ShardToMerge\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MetricsNameList = function serializeAws_json1_1MetricsNameList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1PutRecordInput = function serializeAws_json1_1PutRecordInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  }), input.SequenceNumberForOrdering !== undefined && input.SequenceNumberForOrdering !== null && {\n    SequenceNumberForOrdering: input.SequenceNumberForOrdering\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsInput = function serializeAws_json1_1PutRecordsInput(input, context) {\n  return __assign(__assign({}, input.Records !== undefined && input.Records !== null && {\n    Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntry = function serializeAws_json1_1PutRecordsRequestEntry(input, context) {\n  return __assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntryList = function serializeAws_json1_1PutRecordsRequestEntryList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n  });\n};\nvar serializeAws_json1_1RegisterStreamConsumerInput = function serializeAws_json1_1RegisterStreamConsumerInput(input, context) {\n  return __assign(__assign({}, input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function serializeAws_json1_1RemoveTagsFromStreamInput(input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TagKeys !== undefined && input.TagKeys !== null && {\n    TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context)\n  });\n};\nvar serializeAws_json1_1ShardFilter = function serializeAws_json1_1ShardFilter(input, context) {\n  return __assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1SplitShardInput = function serializeAws_json1_1SplitShardInput(input, context) {\n  return __assign(__assign(__assign({}, input.NewStartingHashKey !== undefined && input.NewStartingHashKey !== null && {\n    NewStartingHashKey: input.NewStartingHashKey\n  }), input.ShardToSplit !== undefined && input.ShardToSplit !== null && {\n    ShardToSplit: input.ShardToSplit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StartingPosition = function serializeAws_json1_1StartingPosition(input, context) {\n  return __assign(__assign(__assign({}, input.SequenceNumber !== undefined && input.SequenceNumber !== null && {\n    SequenceNumber: input.SequenceNumber\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1StartStreamEncryptionInput = function serializeAws_json1_1StartStreamEncryptionInput(input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StopStreamEncryptionInput = function serializeAws_json1_1StopStreamEncryptionInput(input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1SubscribeToShardInput = function serializeAws_json1_1SubscribeToShardInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.StartingPosition !== undefined && input.StartingPosition !== null && {\n    StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context)\n  });\n};\nvar serializeAws_json1_1TagKeyList = function serializeAws_json1_1TagKeyList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1TagMap = function serializeAws_json1_1TagMap(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_json1_1UpdateShardCountInput = function serializeAws_json1_1UpdateShardCountInput(input, context) {\n  return __assign(__assign(__assign({}, input.ScalingType !== undefined && input.ScalingType !== null && {\n    ScalingType: input.ScalingType\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TargetShardCount !== undefined && input.TargetShardCount !== null && {\n    TargetShardCount: input.TargetShardCount\n  });\n};\nvar deserializeAws_json1_1ChildShard = function deserializeAws_json1_1ChildShard(output, context) {\n  return {\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShards: output.ParentShards !== undefined && output.ParentShards !== null ? deserializeAws_json1_1ShardIdList(output.ParentShards, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1ChildShardList = function deserializeAws_json1_1ChildShardList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1ChildShard(entry, context);\n  });\n};\nvar deserializeAws_json1_1Consumer = function deserializeAws_json1_1Consumer(output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerDescription = function deserializeAws_json1_1ConsumerDescription(output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerList = function deserializeAws_json1_1ConsumerList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsOutput = function deserializeAws_json1_1DescribeLimitsOutput(output, context) {\n  return {\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function deserializeAws_json1_1DescribeStreamConsumerOutput(output, context) {\n  return {\n    ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamOutput = function deserializeAws_json1_1DescribeStreamOutput(output, context) {\n  return {\n    StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function deserializeAws_json1_1DescribeStreamSummaryOutput(output, context) {\n  return {\n    StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMetrics = function deserializeAws_json1_1EnhancedMetrics(output, context) {\n  return {\n    ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMonitoringList = function deserializeAws_json1_1EnhancedMonitoringList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function deserializeAws_json1_1EnhancedMonitoringOutput(output, context) {\n  return {\n    CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context) : undefined,\n    DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredIteratorException = function deserializeAws_json1_1ExpiredIteratorException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredNextTokenException = function deserializeAws_json1_1ExpiredNextTokenException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1GetRecordsOutput = function deserializeAws_json1_1GetRecordsOutput(output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null ? output.NextShardIterator : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1GetShardIteratorOutput = function deserializeAws_json1_1GetShardIteratorOutput(output, context) {\n  return {\n    ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined\n  };\n};\nvar deserializeAws_json1_1HashKeyRange = function deserializeAws_json1_1HashKeyRange(output, context) {\n  return {\n    EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined\n  };\n};\nvar deserializeAws_json1_1InternalFailureException = function deserializeAws_json1_1InternalFailureException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidArgumentException = function deserializeAws_json1_1InvalidArgumentException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSAccessDeniedException = function deserializeAws_json1_1KMSAccessDeniedException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSDisabledException = function deserializeAws_json1_1KMSDisabledException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSInvalidStateException = function deserializeAws_json1_1KMSInvalidStateException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSNotFoundException = function deserializeAws_json1_1KMSNotFoundException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSOptInRequired = function deserializeAws_json1_1KMSOptInRequired(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSThrottlingException = function deserializeAws_json1_1KMSThrottlingException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1LimitExceededException = function deserializeAws_json1_1LimitExceededException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ListShardsOutput = function deserializeAws_json1_1ListShardsOutput(output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamConsumersOutput = function deserializeAws_json1_1ListStreamConsumersOutput(output, context) {\n  return {\n    Consumers: output.Consumers !== undefined && output.Consumers !== null ? deserializeAws_json1_1ConsumerList(output.Consumers, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamsOutput = function deserializeAws_json1_1ListStreamsOutput(output, context) {\n  return {\n    HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames: output.StreamNames !== undefined && output.StreamNames !== null ? deserializeAws_json1_1StreamNameList(output.StreamNames, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTagsForStreamOutput = function deserializeAws_json1_1ListTagsForStreamOutput(output, context) {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags: output.Tags !== undefined && output.Tags !== null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined\n  };\n};\nvar deserializeAws_json1_1MetricsNameList = function deserializeAws_json1_1MetricsNameList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function deserializeAws_json1_1ProvisionedThroughputExceededException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordOutput = function deserializeAws_json1_1PutRecordOutput(output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsOutput = function deserializeAws_json1_1PutRecordsOutput(output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntry = function deserializeAws_json1_1PutRecordsResultEntry(output, context) {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntryList = function deserializeAws_json1_1PutRecordsResultEntryList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\nvar deserializeAws_json1_1_Record = function deserializeAws_json1_1_Record(output, context) {\n  return {\n    ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000)) : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1RecordList = function deserializeAws_json1_1RecordList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function deserializeAws_json1_1RegisterStreamConsumerOutput(output, context) {\n  return {\n    Consumer: output.Consumer !== undefined && output.Consumer !== null ? deserializeAws_json1_1Consumer(output.Consumer, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceInUseException = function deserializeAws_json1_1ResourceInUseException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function deserializeAws_json1_1ResourceNotFoundException(output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1SequenceNumberRange = function deserializeAws_json1_1SequenceNumberRange(output, context) {\n  return {\n    EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null ? output.EndingSequenceNumber : undefined,\n    StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null ? output.StartingSequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1Shard = function deserializeAws_json1_1Shard(output, context) {\n  return {\n    AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null ? output.AdjacentParentShardId : undefined,\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1ShardIdList = function deserializeAws_json1_1ShardIdList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ShardList = function deserializeAws_json1_1ShardList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\nvar deserializeAws_json1_1StreamDescription = function deserializeAws_json1_1StreamDescription(output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamDescriptionSummary = function deserializeAws_json1_1StreamDescriptionSummary(output, context) {\n  return {\n    ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamNameList = function deserializeAws_json1_1StreamNameList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardEvent = function deserializeAws_json1_1SubscribeToShardEvent(output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null ? output.ContinuationSequenceNumber : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardEventStream = function deserializeAws_json1_1SubscribeToShardEventStream(output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardOutput = function deserializeAws_json1_1SubscribeToShardOutput(output, context) {\n  return {\n    EventStream: output.EventStream !== undefined && output.EventStream !== null ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context) : undefined\n  };\n};\nvar deserializeAws_json1_1Tag = function deserializeAws_json1_1Tag(output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\nvar deserializeAws_json1_1TagList = function deserializeAws_json1_1TagList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountOutput = function deserializeAws_json1_1UpdateShardCountOutput(output, context) {\n  return {\n    CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null ? output.CurrentShardCount : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined\n  };\n};\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar buildHttpRpcRequest = function buildHttpRpcRequest(context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n          if (body !== undefined) {\n            contents.body = body;\n          }\n          return [2 /*return*/, new __HttpRequest(contents)];\n      }\n    });\n  });\n};\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {\n  var findKey = function findKey(object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","serializeAws_json1_1AddTagsToStreamCommand","input","context","__awaiter","headers","body","JSON","stringify","serializeAws_json1_1AddTagsToStreamInput","buildHttpRpcRequest","undefined","serializeAws_json1_1CreateStreamCommand","serializeAws_json1_1CreateStreamInput","serializeAws_json1_1DecreaseStreamRetentionPeriodCommand","serializeAws_json1_1DecreaseStreamRetentionPeriodInput","serializeAws_json1_1DeleteStreamCommand","serializeAws_json1_1DeleteStreamInput","serializeAws_json1_1DeregisterStreamConsumerCommand","serializeAws_json1_1DeregisterStreamConsumerInput","serializeAws_json1_1DescribeLimitsCommand","serializeAws_json1_1DescribeLimitsInput","serializeAws_json1_1DescribeStreamCommand","serializeAws_json1_1DescribeStreamInput","serializeAws_json1_1DescribeStreamConsumerCommand","serializeAws_json1_1DescribeStreamConsumerInput","serializeAws_json1_1DescribeStreamSummaryCommand","serializeAws_json1_1DescribeStreamSummaryInput","serializeAws_json1_1DisableEnhancedMonitoringCommand","serializeAws_json1_1DisableEnhancedMonitoringInput","serializeAws_json1_1EnableEnhancedMonitoringCommand","serializeAws_json1_1EnableEnhancedMonitoringInput","serializeAws_json1_1GetRecordsCommand","serializeAws_json1_1GetRecordsInput","serializeAws_json1_1GetShardIteratorCommand","serializeAws_json1_1GetShardIteratorInput","serializeAws_json1_1IncreaseStreamRetentionPeriodCommand","serializeAws_json1_1IncreaseStreamRetentionPeriodInput","serializeAws_json1_1ListShardsCommand","serializeAws_json1_1ListShardsInput","serializeAws_json1_1ListStreamConsumersCommand","serializeAws_json1_1ListStreamConsumersInput","serializeAws_json1_1ListStreamsCommand","serializeAws_json1_1ListStreamsInput","serializeAws_json1_1ListTagsForStreamCommand","serializeAws_json1_1ListTagsForStreamInput","serializeAws_json1_1MergeShardsCommand","serializeAws_json1_1MergeShardsInput","serializeAws_json1_1PutRecordCommand","serializeAws_json1_1PutRecordInput","serializeAws_json1_1PutRecordsCommand","serializeAws_json1_1PutRecordsInput","serializeAws_json1_1RegisterStreamConsumerCommand","serializeAws_json1_1RegisterStreamConsumerInput","serializeAws_json1_1RemoveTagsFromStreamCommand","serializeAws_json1_1RemoveTagsFromStreamInput","serializeAws_json1_1SplitShardCommand","serializeAws_json1_1SplitShardInput","serializeAws_json1_1StartStreamEncryptionCommand","serializeAws_json1_1StartStreamEncryptionInput","serializeAws_json1_1StopStreamEncryptionCommand","serializeAws_json1_1StopStreamEncryptionInput","serializeAws_json1_1SubscribeToShardCommand","serializeAws_json1_1SubscribeToShardInput","serializeAws_json1_1UpdateShardCountCommand","serializeAws_json1_1UpdateShardCountInput","deserializeAws_json1_1AddTagsToStreamCommand","output","statusCode","deserializeAws_json1_1AddTagsToStreamCommandError","collectBody","_a","sent","response","$metadata","deserializeMetadata","Promise","resolve","parseBody","parsedOutput","__assign","apply","concat","_g","_h","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1InvalidArgumentExceptionResponse","_c","name","deserializeAws_json1_1LimitExceededExceptionResponse","_d","deserializeAws_json1_1ResourceInUseExceptionResponse","_e","deserializeAws_json1_1ResourceNotFoundExceptionResponse","_f","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1CreateStreamCommand","deserializeAws_json1_1CreateStreamCommandError","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1DeleteStreamCommand","deserializeAws_json1_1DeleteStreamCommandError","deserializeAws_json1_1DeregisterStreamConsumerCommand","deserializeAws_json1_1DeregisterStreamConsumerCommandError","deserializeAws_json1_1DescribeLimitsCommand","deserializeAws_json1_1DescribeLimitsCommandError","data","contents","deserializeAws_json1_1DescribeLimitsOutput","deserializeAws_json1_1DescribeStreamCommand","deserializeAws_json1_1DescribeStreamCommandError","deserializeAws_json1_1DescribeStreamOutput","deserializeAws_json1_1DescribeStreamConsumerCommand","deserializeAws_json1_1DescribeStreamConsumerCommandError","deserializeAws_json1_1DescribeStreamConsumerOutput","deserializeAws_json1_1DescribeStreamSummaryCommand","deserializeAws_json1_1DescribeStreamSummaryCommandError","deserializeAws_json1_1DescribeStreamSummaryOutput","deserializeAws_json1_1DisableEnhancedMonitoringCommand","deserializeAws_json1_1DisableEnhancedMonitoringCommandError","deserializeAws_json1_1EnhancedMonitoringOutput","deserializeAws_json1_1EnableEnhancedMonitoringCommand","deserializeAws_json1_1EnableEnhancedMonitoringCommandError","deserializeAws_json1_1GetRecordsCommand","deserializeAws_json1_1GetRecordsCommandError","deserializeAws_json1_1GetRecordsOutput","_o","_p","deserializeAws_json1_1ExpiredIteratorExceptionResponse","deserializeAws_json1_1KMSAccessDeniedExceptionResponse","deserializeAws_json1_1KMSDisabledExceptionResponse","deserializeAws_json1_1KMSInvalidStateExceptionResponse","deserializeAws_json1_1KMSNotFoundExceptionResponse","deserializeAws_json1_1KMSOptInRequiredResponse","_j","deserializeAws_json1_1KMSThrottlingExceptionResponse","_k","deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse","_l","_m","deserializeAws_json1_1GetShardIteratorCommand","deserializeAws_json1_1GetShardIteratorCommandError","deserializeAws_json1_1GetShardIteratorOutput","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1ListShardsCommand","deserializeAws_json1_1ListShardsCommandError","deserializeAws_json1_1ListShardsOutput","deserializeAws_json1_1ExpiredNextTokenExceptionResponse","deserializeAws_json1_1ListStreamConsumersCommand","deserializeAws_json1_1ListStreamConsumersCommandError","deserializeAws_json1_1ListStreamConsumersOutput","deserializeAws_json1_1ListStreamsCommand","deserializeAws_json1_1ListStreamsCommandError","deserializeAws_json1_1ListStreamsOutput","deserializeAws_json1_1ListTagsForStreamCommand","deserializeAws_json1_1ListTagsForStreamCommandError","deserializeAws_json1_1ListTagsForStreamOutput","deserializeAws_json1_1MergeShardsCommand","deserializeAws_json1_1MergeShardsCommandError","deserializeAws_json1_1PutRecordCommand","deserializeAws_json1_1PutRecordCommandError","deserializeAws_json1_1PutRecordOutput","deserializeAws_json1_1PutRecordsCommand","deserializeAws_json1_1PutRecordsCommandError","deserializeAws_json1_1PutRecordsOutput","deserializeAws_json1_1RegisterStreamConsumerCommand","deserializeAws_json1_1RegisterStreamConsumerCommandError","deserializeAws_json1_1RegisterStreamConsumerOutput","deserializeAws_json1_1RemoveTagsFromStreamCommand","deserializeAws_json1_1RemoveTagsFromStreamCommandError","deserializeAws_json1_1SplitShardCommand","deserializeAws_json1_1SplitShardCommandError","deserializeAws_json1_1StartStreamEncryptionCommand","deserializeAws_json1_1StartStreamEncryptionCommandError","deserializeAws_json1_1StopStreamEncryptionCommand","deserializeAws_json1_1StopStreamEncryptionCommandError","deserializeAws_json1_1SubscribeToShardCommand","deserializeAws_json1_1SubscribeToShardCommandError","deserializeAws_json1_1SubscribeToShardOutput","deserializeAws_json1_1UpdateShardCountCommand","deserializeAws_json1_1UpdateShardCountCommandError","deserializeAws_json1_1UpdateShardCountOutput","deserialized","deserializeAws_json1_1ExpiredIteratorException","deserializeAws_json1_1ExpiredNextTokenException","deserializeAws_json1_1InvalidArgumentException","deserializeAws_json1_1KMSAccessDeniedException","deserializeAws_json1_1KMSDisabledException","deserializeAws_json1_1KMSInvalidStateException","deserializeAws_json1_1KMSNotFoundException","deserializeAws_json1_1KMSOptInRequired","deserializeAws_json1_1KMSThrottlingException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ProvisionedThroughputExceededException","deserializeAws_json1_1ResourceInUseException","deserializeAws_json1_1ResourceNotFoundException","StreamName","Tags","serializeAws_json1_1TagMap","ShardCount","RetentionPeriodHours","EnforceConsumerDeletion","ConsumerARN","ConsumerName","StreamARN","ExclusiveStartShardId","Limit","ShardLevelMetrics","serializeAws_json1_1MetricsNameList","ShardIterator","ShardId","ShardIteratorType","StartingSequenceNumber","Timestamp","Math","round","getTime","MaxResults","NextToken","ShardFilter","serializeAws_json1_1ShardFilter","StreamCreationTimestamp","ExclusiveStartStreamName","ExclusiveStartTagKey","AdjacentShardToMerge","ShardToMerge","filter","e","map","entry","Data","base64Encoder","ExplicitHashKey","PartitionKey","SequenceNumberForOrdering","Records","serializeAws_json1_1PutRecordsRequestEntryList","serializeAws_json1_1PutRecordsRequestEntry","TagKeys","serializeAws_json1_1TagKeyList","Type","NewStartingHashKey","ShardToSplit","serializeAws_json1_1StartingPosition","SequenceNumber","EncryptionType","KeyId","StartingPosition","entries","reduce","acc","__read","key","value","ScalingType","TargetShardCount","deserializeAws_json1_1ChildShard","HashKeyRange","deserializeAws_json1_1HashKeyRange","ParentShards","deserializeAws_json1_1ShardIdList","deserializeAws_json1_1ChildShardList","deserializeAws_json1_1Consumer","ConsumerCreationTimestamp","Date","ConsumerStatus","deserializeAws_json1_1ConsumerDescription","deserializeAws_json1_1ConsumerList","OpenShardCount","ShardLimit","ConsumerDescription","StreamDescription","deserializeAws_json1_1StreamDescription","StreamDescriptionSummary","deserializeAws_json1_1StreamDescriptionSummary","deserializeAws_json1_1EnhancedMetrics","deserializeAws_json1_1MetricsNameList","deserializeAws_json1_1EnhancedMonitoringList","CurrentShardLevelMetrics","DesiredShardLevelMetrics","ChildShards","MillisBehindLatest","NextShardIterator","deserializeAws_json1_1RecordList","EndingHashKey","StartingHashKey","deserializeAws_json1_1InternalFailureException","Shards","deserializeAws_json1_1ShardList","Consumers","HasMoreStreams","StreamNames","deserializeAws_json1_1StreamNameList","HasMoreTags","deserializeAws_json1_1TagList","FailedRecordCount","deserializeAws_json1_1PutRecordsResultEntryList","deserializeAws_json1_1PutRecordsResultEntry","ErrorCode","ErrorMessage","deserializeAws_json1_1_Record","ApproximateArrivalTimestamp","base64Decoder","Consumer","deserializeAws_json1_1SequenceNumberRange","EndingSequenceNumber","deserializeAws_json1_1Shard","AdjacentParentShardId","ParentShardId","SequenceNumberRange","EnhancedMonitoring","HasMoreShards","StreamStatus","ConsumerCount","deserializeAws_json1_1SubscribeToShardEvent","ContinuationSequenceNumber","deserializeAws_json1_1SubscribeToShardEventStream","InternalFailureException","KMSAccessDeniedException","KMSDisabledException","KMSInvalidStateException","KMSNotFoundException","KMSOptInRequired","KMSThrottlingException","ResourceInUseException","ResourceNotFoundException","SubscribeToShardEvent","$unknown","EventStream","deserializeAws_json1_1Tag","Key","Value","CurrentShardCount","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@aws-sdk/client-kinesis/protocols/Aws_json1_1.ts"],"sourcesContent":["import { AddTagsToStreamCommandInput, AddTagsToStreamCommandOutput } from \"../commands/AddTagsToStreamCommand\";\nimport { CreateStreamCommandInput, CreateStreamCommandOutput } from \"../commands/CreateStreamCommand\";\nimport {\n  DecreaseStreamRetentionPeriodCommandInput,\n  DecreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/DecreaseStreamRetentionPeriodCommand\";\nimport { DeleteStreamCommandInput, DeleteStreamCommandOutput } from \"../commands/DeleteStreamCommand\";\nimport {\n  DeregisterStreamConsumerCommandInput,\n  DeregisterStreamConsumerCommandOutput,\n} from \"../commands/DeregisterStreamConsumerCommand\";\nimport { DescribeLimitsCommandInput, DescribeLimitsCommandOutput } from \"../commands/DescribeLimitsCommand\";\nimport { DescribeStreamCommandInput, DescribeStreamCommandOutput } from \"../commands/DescribeStreamCommand\";\nimport {\n  DescribeStreamConsumerCommandInput,\n  DescribeStreamConsumerCommandOutput,\n} from \"../commands/DescribeStreamConsumerCommand\";\nimport {\n  DescribeStreamSummaryCommandInput,\n  DescribeStreamSummaryCommandOutput,\n} from \"../commands/DescribeStreamSummaryCommand\";\nimport {\n  DisableEnhancedMonitoringCommandInput,\n  DisableEnhancedMonitoringCommandOutput,\n} from \"../commands/DisableEnhancedMonitoringCommand\";\nimport {\n  EnableEnhancedMonitoringCommandInput,\n  EnableEnhancedMonitoringCommandOutput,\n} from \"../commands/EnableEnhancedMonitoringCommand\";\nimport { GetRecordsCommandInput, GetRecordsCommandOutput } from \"../commands/GetRecordsCommand\";\nimport { GetShardIteratorCommandInput, GetShardIteratorCommandOutput } from \"../commands/GetShardIteratorCommand\";\nimport {\n  IncreaseStreamRetentionPeriodCommandInput,\n  IncreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/IncreaseStreamRetentionPeriodCommand\";\nimport { ListShardsCommandInput, ListShardsCommandOutput } from \"../commands/ListShardsCommand\";\nimport {\n  ListStreamConsumersCommandInput,\n  ListStreamConsumersCommandOutput,\n} from \"../commands/ListStreamConsumersCommand\";\nimport { ListStreamsCommandInput, ListStreamsCommandOutput } from \"../commands/ListStreamsCommand\";\nimport { ListTagsForStreamCommandInput, ListTagsForStreamCommandOutput } from \"../commands/ListTagsForStreamCommand\";\nimport { MergeShardsCommandInput, MergeShardsCommandOutput } from \"../commands/MergeShardsCommand\";\nimport { PutRecordCommandInput, PutRecordCommandOutput } from \"../commands/PutRecordCommand\";\nimport { PutRecordsCommandInput, PutRecordsCommandOutput } from \"../commands/PutRecordsCommand\";\nimport {\n  RegisterStreamConsumerCommandInput,\n  RegisterStreamConsumerCommandOutput,\n} from \"../commands/RegisterStreamConsumerCommand\";\nimport {\n  RemoveTagsFromStreamCommandInput,\n  RemoveTagsFromStreamCommandOutput,\n} from \"../commands/RemoveTagsFromStreamCommand\";\nimport { SplitShardCommandInput, SplitShardCommandOutput } from \"../commands/SplitShardCommand\";\nimport {\n  StartStreamEncryptionCommandInput,\n  StartStreamEncryptionCommandOutput,\n} from \"../commands/StartStreamEncryptionCommand\";\nimport {\n  StopStreamEncryptionCommandInput,\n  StopStreamEncryptionCommandOutput,\n} from \"../commands/StopStreamEncryptionCommand\";\nimport { SubscribeToShardCommandInput, SubscribeToShardCommandOutput } from \"../commands/SubscribeToShardCommand\";\nimport { UpdateShardCountCommandInput, UpdateShardCountCommandOutput } from \"../commands/UpdateShardCountCommand\";\nimport {\n  AddTagsToStreamInput,\n  ChildShard,\n  Consumer,\n  ConsumerDescription,\n  CreateStreamInput,\n  DecreaseStreamRetentionPeriodInput,\n  DeleteStreamInput,\n  DeregisterStreamConsumerInput,\n  DescribeLimitsInput,\n  DescribeLimitsOutput,\n  DescribeStreamConsumerInput,\n  DescribeStreamConsumerOutput,\n  DescribeStreamInput,\n  DescribeStreamOutput,\n  DescribeStreamSummaryInput,\n  DescribeStreamSummaryOutput,\n  DisableEnhancedMonitoringInput,\n  EnableEnhancedMonitoringInput,\n  EnhancedMetrics,\n  EnhancedMonitoringOutput,\n  ExpiredIteratorException,\n  ExpiredNextTokenException,\n  GetRecordsInput,\n  GetRecordsOutput,\n  GetShardIteratorInput,\n  GetShardIteratorOutput,\n  HashKeyRange,\n  IncreaseStreamRetentionPeriodInput,\n  InternalFailureException,\n  InvalidArgumentException,\n  KMSAccessDeniedException,\n  KMSDisabledException,\n  KMSInvalidStateException,\n  KMSNotFoundException,\n  KMSOptInRequired,\n  KMSThrottlingException,\n  LimitExceededException,\n  ListShardsInput,\n  ListShardsOutput,\n  ListStreamConsumersInput,\n  ListStreamConsumersOutput,\n  ListStreamsInput,\n  ListStreamsOutput,\n  ListTagsForStreamInput,\n  ListTagsForStreamOutput,\n  MergeShardsInput,\n  MetricsName,\n  ProvisionedThroughputExceededException,\n  PutRecordInput,\n  PutRecordOutput,\n  PutRecordsInput,\n  PutRecordsOutput,\n  PutRecordsRequestEntry,\n  PutRecordsResultEntry,\n  RegisterStreamConsumerInput,\n  RegisterStreamConsumerOutput,\n  RemoveTagsFromStreamInput,\n  ResourceInUseException,\n  ResourceNotFoundException,\n  SequenceNumberRange,\n  Shard,\n  ShardFilter,\n  SplitShardInput,\n  StartStreamEncryptionInput,\n  StartingPosition,\n  StopStreamEncryptionInput,\n  StreamDescription,\n  StreamDescriptionSummary,\n  SubscribeToShardEvent,\n  SubscribeToShardEventStream,\n  SubscribeToShardInput,\n  SubscribeToShardOutput,\n  Tag,\n  UpdateShardCountInput,\n  UpdateShardCountOutput,\n  _Record,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AddTagsToStreamCommand = async (\n  input: AddTagsToStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateStreamCommand = async (\n  input: CreateStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.CreateStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  input: DecreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteStreamCommand = async (\n  input: DeleteStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeleteStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  input: DeregisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLimitsCommand = async (\n  input: DescribeLimitsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamCommand = async (\n  input: DescribeStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamConsumerCommand = async (\n  input: DescribeStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamSummaryCommand = async (\n  input: DescribeStreamSummaryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  input: DisableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  input: EnableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetRecordsCommand = async (\n  input: GetRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetShardIteratorCommand = async (\n  input: GetShardIteratorCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  input: IncreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListShardsCommand = async (\n  input: ListShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamConsumersCommand = async (\n  input: ListStreamConsumersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamsCommand = async (\n  input: ListStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForStreamCommand = async (\n  input: ListTagsForStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeShardsCommand = async (\n  input: MergeShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.MergeShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordCommand = async (\n  input: PutRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordsCommand = async (\n  input: PutRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RegisterStreamConsumerCommand = async (\n  input: RegisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  input: RemoveTagsFromStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SplitShardCommand = async (\n  input: SplitShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SplitShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartStreamEncryptionCommand = async (\n  input: StartStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopStreamEncryptionCommand = async (\n  input: StopStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SubscribeToShardCommand = async (\n  input: SubscribeToShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateShardCountCommand = async (\n  input: UpdateShardCountCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AddTagsToStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AddTagsToStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AddTagsToStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AddTagsToStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DecreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeregisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeregisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLimitsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLimitsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n  const response: DescribeLimitsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLimitsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n  const response: DescribeStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n  const response: DescribeStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamSummaryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n  const response: DescribeStreamSummaryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: DisableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: EnableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1EnableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n  const response: GetRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredIteratorException\":\n    case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetShardIteratorCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetShardIteratorCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n  const response: GetShardIteratorCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetShardIteratorCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: IncreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListShardsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListShardsOutput(data, context);\n  const response: ListShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamConsumersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamConsumersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n  const response: ListStreamConsumersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamConsumersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n  const response: ListStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n  const response: ListTagsForStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeShardsCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: MergeShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordOutput(data, context);\n  const response: PutRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n  const response: PutRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RegisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n  const response: RegisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: RemoveTagsFromStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RemoveTagsFromStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SplitShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SplitShardCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SplitShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SplitShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StartStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StopStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SubscribeToShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SubscribeToShardCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n  const response: SubscribeToShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SubscribeToShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateShardCountCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateShardCountCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n  const response: UpdateShardCountCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateShardCountCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ExpiredIteratorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredIteratorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredIteratorException(body, context);\n  const contents: ExpiredIteratorException = {\n    name: \"ExpiredIteratorException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredNextTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n  const contents: ExpiredNextTokenException = {\n    name: \"ExpiredNextTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidArgumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidArgumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidArgumentException(body, context);\n  const contents: InvalidArgumentException = {\n    name: \"InvalidArgumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSAccessDeniedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n  const contents: KMSAccessDeniedException = {\n    name: \"KMSAccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSDisabledExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSDisabledException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSDisabledException(body, context);\n  const contents: KMSDisabledException = {\n    name: \"KMSDisabledException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSInvalidStateException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSInvalidStateException(body, context);\n  const contents: KMSInvalidStateException = {\n    name: \"KMSInvalidStateException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSNotFoundException(body, context);\n  const contents: KMSNotFoundException = {\n    name: \"KMSNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSOptInRequiredResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSOptInRequired> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSOptInRequired(body, context);\n  const contents: KMSOptInRequired = {\n    name: \"KMSOptInRequired\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSThrottlingException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSThrottlingException(body, context);\n  const contents: KMSThrottlingException = {\n    name: \"KMSThrottlingException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ProvisionedThroughputExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n  const contents: ProvisionedThroughputExceededException = {\n    name: \"ProvisionedThroughputExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceInUseExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceInUseException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceInUseException(body, context);\n  const contents: ResourceInUseException = {\n    name: \"ResourceInUseException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AddTagsToStreamInput = (input: AddTagsToStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Tags !== undefined && input.Tags !== null && { Tags: serializeAws_json1_1TagMap(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateStreamInput = (input: CreateStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardCount !== undefined && input.ShardCount !== null && { ShardCount: input.ShardCount }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DecreaseStreamRetentionPeriodInput = (\n  input: DecreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteStreamInput = (input: DeleteStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.EnforceConsumerDeletion !== undefined &&\n      input.EnforceConsumerDeletion !== null && { EnforceConsumerDeletion: input.EnforceConsumerDeletion }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeregisterStreamConsumerInput = (\n  input: DeregisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLimitsInput = (input: DescribeLimitsInput, context: __SerdeContext): any => {\n  return {};\n};\n\nconst serializeAws_json1_1DescribeStreamConsumerInput = (\n  input: DescribeStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamInput = (input: DescribeStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamSummaryInput = (\n  input: DescribeStreamSummaryInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DisableEnhancedMonitoringInput = (\n  input: DisableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1EnableEnhancedMonitoringInput = (\n  input: EnableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1GetRecordsInput = (input: GetRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.ShardIterator !== undefined && input.ShardIterator !== null && { ShardIterator: input.ShardIterator }),\n  };\n};\n\nconst serializeAws_json1_1GetShardIteratorInput = (input: GetShardIteratorInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.ShardIteratorType !== undefined &&\n      input.ShardIteratorType !== null && { ShardIteratorType: input.ShardIteratorType }),\n    ...(input.StartingSequenceNumber !== undefined &&\n      input.StartingSequenceNumber !== null && { StartingSequenceNumber: input.StartingSequenceNumber }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n  };\n};\n\nconst serializeAws_json1_1IncreaseStreamRetentionPeriodInput = (\n  input: IncreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListShardsInput = (input: ListShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.ShardFilter !== undefined &&\n      input.ShardFilter !== null && { ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context) }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamConsumersInput = (\n  input: ListStreamConsumersInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamsInput = (input: ListStreamsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartStreamName !== undefined &&\n      input.ExclusiveStartStreamName !== null && { ExclusiveStartStreamName: input.ExclusiveStartStreamName }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForStreamInput = (input: ListTagsForStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartTagKey !== undefined &&\n      input.ExclusiveStartTagKey !== null && { ExclusiveStartTagKey: input.ExclusiveStartTagKey }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MergeShardsInput = (input: MergeShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AdjacentShardToMerge !== undefined &&\n      input.AdjacentShardToMerge !== null && { AdjacentShardToMerge: input.AdjacentShardToMerge }),\n    ...(input.ShardToMerge !== undefined && input.ShardToMerge !== null && { ShardToMerge: input.ShardToMerge }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MetricsNameList = (input: (MetricsName | string)[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1PutRecordInput = (input: PutRecordInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n    ...(input.SequenceNumberForOrdering !== undefined &&\n      input.SequenceNumberForOrdering !== null && { SequenceNumberForOrdering: input.SequenceNumberForOrdering }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsInput = (input: PutRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Records !== undefined &&\n      input.Records !== null && { Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context) }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntry = (input: PutRecordsRequestEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntryList = (\n  input: PutRecordsRequestEntry[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n    });\n};\n\nconst serializeAws_json1_1RegisterStreamConsumerInput = (\n  input: RegisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1RemoveTagsFromStreamInput = (\n  input: RemoveTagsFromStreamInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TagKeys !== undefined &&\n      input.TagKeys !== null && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }),\n  };\n};\n\nconst serializeAws_json1_1ShardFilter = (input: ShardFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1SplitShardInput = (input: SplitShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.NewStartingHashKey !== undefined &&\n      input.NewStartingHashKey !== null && { NewStartingHashKey: input.NewStartingHashKey }),\n    ...(input.ShardToSplit !== undefined && input.ShardToSplit !== null && { ShardToSplit: input.ShardToSplit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StartingPosition = (input: StartingPosition, context: __SerdeContext): any => {\n  return {\n    ...(input.SequenceNumber !== undefined &&\n      input.SequenceNumber !== null && { SequenceNumber: input.SequenceNumber }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1StartStreamEncryptionInput = (\n  input: StartStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StopStreamEncryptionInput = (\n  input: StopStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1SubscribeToShardInput = (input: SubscribeToShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.StartingPosition !== undefined &&\n      input.StartingPosition !== null && {\n        StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TagKeyList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TagMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1UpdateShardCountInput = (input: UpdateShardCountInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ScalingType !== undefined && input.ScalingType !== null && { ScalingType: input.ScalingType }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TargetShardCount !== undefined &&\n      input.TargetShardCount !== null && { TargetShardCount: input.TargetShardCount }),\n  };\n};\n\nconst deserializeAws_json1_1ChildShard = (output: any, context: __SerdeContext): ChildShard => {\n  return {\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShards:\n      output.ParentShards !== undefined && output.ParentShards !== null\n        ? deserializeAws_json1_1ShardIdList(output.ParentShards, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ChildShardList = (output: any, context: __SerdeContext): ChildShard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ChildShard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1Consumer = (output: any, context: __SerdeContext): Consumer => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerDescription = (output: any, context: __SerdeContext): ConsumerDescription => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerList = (output: any, context: __SerdeContext): Consumer[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Consumer(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1DescribeLimitsOutput = (output: any, context: __SerdeContext): DescribeLimitsOutput => {\n  return {\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamConsumerOutput => {\n  return {\n    ConsumerDescription:\n      output.ConsumerDescription !== undefined && output.ConsumerDescription !== null\n        ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamOutput = (output: any, context: __SerdeContext): DescribeStreamOutput => {\n  return {\n    StreamDescription:\n      output.StreamDescription !== undefined && output.StreamDescription !== null\n        ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamSummaryOutput => {\n  return {\n    StreamDescriptionSummary:\n      output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null\n        ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMetrics = (output: any, context: __SerdeContext): EnhancedMetrics => {\n  return {\n    ShardLevelMetrics:\n      output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringList = (output: any, context: __SerdeContext): EnhancedMetrics[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1EnhancedMetrics(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringOutput = (\n  output: any,\n  context: __SerdeContext\n): EnhancedMonitoringOutput => {\n  return {\n    CurrentShardLevelMetrics:\n      output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context)\n        : undefined,\n    DesiredShardLevelMetrics:\n      output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context)\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredIteratorException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredIteratorException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredNextTokenException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetRecordsOutput = (output: any, context: __SerdeContext): GetRecordsOutput => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    NextShardIterator:\n      output.NextShardIterator !== undefined && output.NextShardIterator !== null\n        ? output.NextShardIterator\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetShardIteratorOutput = (output: any, context: __SerdeContext): GetShardIteratorOutput => {\n  return {\n    ShardIterator:\n      output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HashKeyRange = (output: any, context: __SerdeContext): HashKeyRange => {\n  return {\n    EndingHashKey:\n      output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey:\n      output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalFailureException = (\n  output: any,\n  context: __SerdeContext\n): InternalFailureException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidArgumentException = (\n  output: any,\n  context: __SerdeContext\n): InvalidArgumentException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedException = (\n  output: any,\n  context: __SerdeContext\n): KMSAccessDeniedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSDisabledException = (output: any, context: __SerdeContext): KMSDisabledException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateException = (\n  output: any,\n  context: __SerdeContext\n): KMSInvalidStateException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSNotFoundException = (output: any, context: __SerdeContext): KMSNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSOptInRequired = (output: any, context: __SerdeContext): KMSOptInRequired => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSThrottlingException = (output: any, context: __SerdeContext): KMSThrottlingException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListShardsOutput = (output: any, context: __SerdeContext): ListShardsOutput => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamConsumersOutput = (\n  output: any,\n  context: __SerdeContext\n): ListStreamConsumersOutput => {\n  return {\n    Consumers:\n      output.Consumers !== undefined && output.Consumers !== null\n        ? deserializeAws_json1_1ConsumerList(output.Consumers, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamsOutput = (output: any, context: __SerdeContext): ListStreamsOutput => {\n  return {\n    HasMoreStreams:\n      output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames:\n      output.StreamNames !== undefined && output.StreamNames !== null\n        ? deserializeAws_json1_1StreamNameList(output.StreamNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForStreamOutput = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForStreamOutput => {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1TagList(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricsNameList = (output: any, context: __SerdeContext): (MetricsName | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededException = (\n  output: any,\n  context: __SerdeContext\n): ProvisionedThroughputExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordOutput = (output: any, context: __SerdeContext): PutRecordOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsOutput = (output: any, context: __SerdeContext): PutRecordsOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntry = (output: any, context: __SerdeContext): PutRecordsResultEntry => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntryList = (\n  output: any,\n  context: __SerdeContext\n): PutRecordsResultEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1_Record = (output: any, context: __SerdeContext): _Record => {\n  return {\n    ApproximateArrivalTimestamp:\n      output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null\n        ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000))\n        : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RecordList = (output: any, context: __SerdeContext): _Record[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1_Record(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): RegisterStreamConsumerOutput => {\n  return {\n    Consumer:\n      output.Consumer !== undefined && output.Consumer !== null\n        ? deserializeAws_json1_1Consumer(output.Consumer, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceInUseException = (output: any, context: __SerdeContext): ResourceInUseException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SequenceNumberRange = (output: any, context: __SerdeContext): SequenceNumberRange => {\n  return {\n    EndingSequenceNumber:\n      output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null\n        ? output.EndingSequenceNumber\n        : undefined,\n    StartingSequenceNumber:\n      output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null\n        ? output.StartingSequenceNumber\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Shard = (output: any, context: __SerdeContext): Shard => {\n  return {\n    AdjacentParentShardId:\n      output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null\n        ? output.AdjacentParentShardId\n        : undefined,\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShardId:\n      output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange:\n      output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null\n        ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ShardIdList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ShardList = (output: any, context: __SerdeContext): Shard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Shard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1StreamDescription = (output: any, context: __SerdeContext): StreamDescription => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    HasMoreShards:\n      output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamDescriptionSummary = (\n  output: any,\n  context: __SerdeContext\n): StreamDescriptionSummary => {\n  return {\n    ConsumerCount:\n      output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1SubscribeToShardEvent = (output: any, context: __SerdeContext): SubscribeToShardEvent => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    ContinuationSequenceNumber:\n      output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null\n        ? output.ContinuationSequenceNumber\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscribeToShardEventStream = (\n  output: any,\n  context: __SerdeContext\n): SubscribeToShardEventStream => {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(\n        output.InternalFailureException,\n        context\n      ),\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(\n        output.KMSAccessDeniedException,\n        context\n      ),\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context),\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(\n        output.KMSInvalidStateException,\n        context\n      ),\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context),\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context),\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context),\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context),\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(\n        output.ResourceNotFoundException,\n        context\n      ),\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_json1_1SubscribeToShardOutput = (output: any, context: __SerdeContext): SubscribeToShardOutput => {\n  return {\n    EventStream:\n      output.EventStream !== undefined && output.EventStream !== null\n        ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Tag = (output: any, context: __SerdeContext): Tag => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TagList = (output: any, context: __SerdeContext): Tag[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Tag(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1UpdateShardCountOutput = (output: any, context: __SerdeContext): UpdateShardCountOutput => {\n  return {\n    CurrentShardCount:\n      output.CurrentShardCount !== undefined && output.CurrentShardCount !== null\n        ? output.CurrentShardCount\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount:\n      output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}