{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { __awaiter as e, __rest as t } from \"tslib\";\nimport { Auth as r } from \"aws-amplify\";\nimport n from \"lodash/get.js\";\nimport { createMachine as o, sendUpdate as i } from \"xstate\";\nimport { runValidators as s } from \"../../../validators/index.mjs\";\nimport { clearAttributeToVerify as a, clearChallengeName as d, clearRequiredAttributes as c, clearError as l, clearFormValues as u, clearTouched as g, clearUnverifiedContactMethods as m, clearValidationError as f, handleInput as p, handleSubmit as h, handleBlur as I, parsePhoneNumber as v, setChallengeName as S, setConfirmResetPasswordIntent as A, setConfirmSignUpIntent as U, setRequiredAttributes as E, setCredentials as y, setFieldErrors as T, setRemoteError as C, setTotpSecretCode as b, setUnverifiedContactMethods as N, setUser as w, setUsernameAuthAttributes as R } from \"../actions.mjs\";\nimport { defaultServices as P } from \"../defaultServices.mjs\";\nimport { isEmpty as V } from \"../../../utils/index.mjs\";\nvar _ = [\"SMS_MFA\", \"SOFTWARE_TOKEN_MFA\"],\n  F = function F(e) {\n    return n(e, \"data.challengeName\");\n  },\n  O = function O(e, t) {\n    return e === t;\n  },\n  j = function j(e) {\n    return _.includes(e);\n  };\nfunction k(_ref) {\n  var n = _ref.services;\n  return o({\n    initial: \"init\",\n    id: \"signInActor\",\n    predictableActionArguments: !0,\n    states: {\n      init: {\n        always: [{\n          target: \"autoSignIn.submit\",\n          cond: \"shouldAutoSubmit\"\n        }, {\n          target: \"autoSignIn\",\n          cond: \"shouldAutoSignIn\"\n        }, {\n          target: \"signIn\"\n        }]\n      },\n      signIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              FEDERATED_SIGN_IN: \"federatedSignIn\"\n            }\n          },\n          federatedSignIn: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"federatedSignIn\",\n              onError: {\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"parsePhoneNumber\", \"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"verifying\"\n              }],\n              onError: [{\n                cond: \"shouldRedirectToConfirmSignUp\",\n                actions: [\"setCredentials\", \"setConfirmSignUpIntent\"],\n                target: \"rejected\"\n              }, {\n                cond: \"shouldRedirectToConfirmResetPassword\",\n                actions: [\"setUsernameAuthAttributes\", \"setConfirmResetPasswordIntent\"],\n                target: \"rejected\"\n              }, {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }]\n            }\n          },\n          verifying: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"checkVerifiedContact\",\n              onDone: [{\n                cond: \"shouldRequestVerification\",\n                target: \"#signInActor.verifyUser\",\n                actions: \"setUnverifiedContactMethods\"\n              }, {\n                target: \"resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      autoSignIn: {\n        initial: \"pending\",\n        states: {\n          pending: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            on: {\n              AUTO_SIGN_IN: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              AUTO_SIGN_IN_FAILURE: {\n                actions: \"setRemoteError\",\n                target: \"pending\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"signIn\",\n              onDone: [{\n                cond: \"shouldSetupTOTP\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.setupTOTP\"\n              }, {\n                cond: \"shouldConfirmSignIn\",\n                actions: [\"setUser\", \"setChallengeName\"],\n                target: \"#signInActor.confirmSignIn\"\n              }, {\n                cond: \"shouldForceChangePassword\",\n                actions: [\"setUser\", \"setChallengeName\", \"setRequiredAttributes\"],\n                target: \"#signInActor.forceNewPassword\"\n              }, {\n                actions: \"setUser\",\n                target: \"#signInActor.resolved\"\n              }],\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"#signInActor.signIn\"\n              }\n            }\n          },\n          resolved: {\n            always: \"#signInActor.resolved\"\n          },\n          rejected: {\n            always: \"#signInActor.rejected\"\n          }\n        }\n      },\n      confirmSignIn: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"clearError\", \"sendUpdate\"],\n            invoke: {\n              src: \"confirmSignIn\",\n              onDone: {\n                target: \"#signInActor.resolved\",\n                actions: [\"setUser\", \"clearChallengeName\", \"clearRequiredAttributes\"]\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          }\n        }\n      },\n      forceNewPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: \"sendUpdate\"\n              },\n              invalid: {\n                entry: \"sendUpdate\"\n              }\n            },\n            on: {\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submit: {\n            initial: \"idle\",\n            entry: \"clearError\",\n            states: {\n              idle: {\n                entry: \"sendUpdate\",\n                on: {\n                  SUBMIT: {\n                    actions: \"handleSubmit\",\n                    target: \"validate\"\n                  }\n                }\n              },\n              validate: {\n                entry: \"sendUpdate\",\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"sendUpdate\", \"clearError\"],\n                invoke: {\n                  src: \"forceNewPassword\",\n                  onDone: [{\n                    cond: \"shouldConfirmSignIn\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.confirmSignIn\"\n                  }, {\n                    cond: \"shouldSetupTOTP\",\n                    actions: [\"setUser\", \"setChallengeName\"],\n                    target: \"#signInActor.setupTOTP\"\n                  }, {\n                    target: \"resolved\",\n                    actions: [\"setUser\", \"setCredentials\"]\n                  }],\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setRemoteError\"\n                  }\n                }\n              },\n              resolved: {\n                type: \"final\",\n                always: \"#signInActor.resolved\"\n              }\n            }\n          }\n        }\n      },\n      setupTOTP: {\n        initial: \"getTotpSecretCode\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          getTotpSecretCode: {\n            invoke: {\n              src: \"getTotpSecretCode\",\n              onDone: {\n                target: \"edit\",\n                actions: \"setTotpSecretCode\"\n              },\n              onError: {\n                target: \"edit\",\n                actions: \"setRemoteError\"\n              }\n            }\n          },\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SIGN_IN: \"#signInActor.signIn\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"clearError\"],\n            invoke: {\n              src: \"verifyTotpToken\",\n              onDone: {\n                actions: [\"clearChallengeName\", \"clearRequiredAttributes\"],\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      verifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"verifyUser\",\n              onDone: {\n                target: \"#signInActor.confirmVerifyUser\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmVerifyUser: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUnverifiedContactMethods\", \"clearAttributeToVerify\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              SKIP: \"#signInActor.resolved\",\n              CHANGE: {\n                actions: \"handleInput\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: \"clearError\",\n            invoke: {\n              src: \"confirmVerifyUser\",\n              onDone: {\n                target: \"#signInActor.resolved\"\n              },\n              onError: {\n                actions: \"setRemoteError\",\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\",\n        data: function data(e) {\n          return {\n            user: e.user\n          };\n        }\n      },\n      rejected: {\n        type: \"final\",\n        data: function data(e, t) {\n          return {\n            intent: e.redirectIntent,\n            authAttributes: e.authAttributes\n          };\n        }\n      }\n    }\n  }, {\n    actions: {\n      clearAttributeToVerify: a,\n      clearChallengeName: d,\n      clearRequiredAttributes: c,\n      clearError: l,\n      clearFormValues: u,\n      clearTouched: g,\n      clearUnverifiedContactMethods: m,\n      clearValidationError: f,\n      handleInput: p,\n      handleSubmit: h,\n      handleBlur: I,\n      parsePhoneNumber: v,\n      setChallengeName: S,\n      setConfirmResetPasswordIntent: A,\n      setConfirmSignUpIntent: U,\n      setRequiredAttributes: E,\n      setCredentials: y,\n      setFieldErrors: T,\n      setRemoteError: C,\n      setTotpSecretCode: b,\n      setUnverifiedContactMethods: N,\n      setUser: w,\n      setUsernameAuthAttributes: R,\n      sendUpdate: i()\n    },\n    guards: {\n      shouldAutoSignIn: function shouldAutoSignIn(e) {\n        return \"autoSignIn\" === (null == e ? void 0 : e.intent);\n      },\n      shouldAutoSubmit: function shouldAutoSubmit(e) {\n        return \"autoSignInSubmit\" === (null == e ? void 0 : e.intent);\n      },\n      shouldConfirmSignIn: function shouldConfirmSignIn(e, t) {\n        return j(F(t));\n      },\n      shouldForceChangePassword: function shouldForceChangePassword(e, t) {\n        return O(F(t), \"NEW_PASSWORD_REQUIRED\");\n      },\n      shouldRedirectToConfirmResetPassword: function shouldRedirectToConfirmResetPassword(e, t) {\n        return \"PasswordResetRequiredException\" === t.data.code;\n      },\n      shouldRedirectToConfirmSignUp: function shouldRedirectToConfirmSignUp(e, t) {\n        return \"UserNotConfirmedException\" === t.data.code;\n      },\n      shouldRequestVerification: function shouldRequestVerification(e, t) {\n        var _t$data = t.data,\n          r = _t$data.unverified,\n          n = _t$data.verified;\n        return V(n) && !V(r);\n      },\n      shouldSetupTOTP: function shouldSetupTOTP(e, t) {\n        return O(F(t), \"MFA_SETUP\");\n      }\n    },\n    services: {\n      signIn: function signIn(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _t$authAttributes, e, _t$formValues, r, o, i, s;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _t$authAttributes = t.authAttributes, e = _t$authAttributes === void 0 ? {} : _t$authAttributes, _t$formValues = t.formValues, r = _t$formValues === void 0 ? {} : _t$formValues, o = Object.assign(Object.assign({}, e), r), i = o.username, s = o.password;\n                _context.next = 3;\n                return n.handleSignIn({\n                  username: i,\n                  password: s\n                });\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n      },\n      confirmSignIn: function confirmSignIn(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var e, o, i, s;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                e = t.challengeName, o = t.user, i = t.formValues.confirmation_code, s = j(e) ? e : void 0;\n                _context2.next = 3;\n                return n.handleConfirmSignIn({\n                  user: o,\n                  code: i,\n                  mfaType: s\n                });\n              case 3:\n                _context2.next = 5;\n                return r.currentAuthenticatedUser();\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n      },\n      forceNewPassword: function forceNewPassword(n) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var e, o, i, s, a, d, c, l, _t;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                e = n.user, o = n.formValues;\n                s = o.password, a = o.confirm_password, d = o.phone_number, c = o.country_code, l = t(o, [\"password\", \"confirm_password\", \"phone_number\", \"country_code\"]);\n                d && (i = \"\".concat(c).concat(d).replace(/[^A-Z0-9+]/gi, \"\"), l = Object.assign(Object.assign({}, l), {\n                  phone_number: i\n                }));\n                _context3.prev = 3;\n                _context3.next = 6;\n                return r.completeNewPassword(e, s, l);\n              case 6:\n                _t = _context3.sent;\n                return _context3.abrupt(\"return\", _t.challengeName ? _t : r.currentAuthenticatedUser());\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](3);\n                return _context3.abrupt(\"return\", Promise.reject(_context3.t0));\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3, null, [[3, 10]]);\n        }));\n      },\n      getTotpSecretCode: function getTotpSecretCode(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var e;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                e = t.user;\n                return _context4.abrupt(\"return\", r.setupTOTP(e));\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        }));\n      },\n      verifyTotpToken: function verifyTotpToken(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n          var e, n, o;\n          return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                e = t.formValues, n = t.user, o = e.confirmation_code;\n                return _context5.abrupt(\"return\", r.verifyTotpToken(n, o));\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5);\n        }));\n      },\n      federatedSignIn: function federatedSignIn(t, n) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n          var e;\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                e = n.data.provider;\n                _context6.next = 3;\n                return r.federatedSignIn({\n                  provider: e\n                });\n              case 3:\n                return _context6.abrupt(\"return\", _context6.sent);\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n      },\n      checkVerifiedContact: function checkVerifiedContact(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n          var e;\n          return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n            while (1) switch (_context7.prev = _context7.next) {\n              case 0:\n                e = t.user;\n                _context7.next = 3;\n                return r.verifiedContact(e);\n              case 3:\n                return _context7.abrupt(\"return\", _context7.sent);\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }, _callee7);\n        }));\n      },\n      verifyUser: function verifyUser(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n          var e, n;\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) switch (_context8.prev = _context8.next) {\n              case 0:\n                e = t.formValues.unverifiedAttr;\n                _context8.next = 3;\n                return r.verifyCurrentUserAttribute(e);\n              case 3:\n                n = _context8.sent;\n                return _context8.abrupt(\"return\", (t.attributeToVerify = e, n));\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }, _callee8);\n        }));\n      },\n      confirmVerifyUser: function confirmVerifyUser(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n          var e, n;\n          return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n            while (1) switch (_context9.prev = _context9.next) {\n              case 0:\n                e = t.attributeToVerify, n = t.formValues.confirmation_code;\n                _context9.next = 3;\n                return r.verifyCurrentUserAttributeSubmit(e, n);\n              case 3:\n                return _context9.abrupt(\"return\", _context9.sent);\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }, _callee9);\n        }));\n      },\n      validateFields: function validateFields(t) {\n        return e(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n          return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n            while (1) switch (_context10.prev = _context10.next) {\n              case 0:\n                return _context10.abrupt(\"return\", s(t.formValues, t.touched, t.passwordSettings, [P.validateFormPassword, P.validateConfirmPassword]));\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }, _callee10);\n        }));\n      }\n    }\n  });\n}\nexport { k as signInActor };","map":{"version":3,"names":["__awaiter","e","__rest","t","Auth","r","n","createMachine","o","sendUpdate","i","runValidators","s","clearAttributeToVerify","a","clearChallengeName","d","clearRequiredAttributes","c","clearError","l","clearFormValues","u","clearTouched","g","clearUnverifiedContactMethods","m","clearValidationError","f","handleInput","p","handleSubmit","h","handleBlur","I","parsePhoneNumber","v","setChallengeName","S","setConfirmResetPasswordIntent","A","setConfirmSignUpIntent","U","setRequiredAttributes","E","setCredentials","y","setFieldErrors","T","setRemoteError","C","setTotpSecretCode","b","setUnverifiedContactMethods","N","setUser","w","setUsernameAuthAttributes","R","defaultServices","P","isEmpty","V","_","F","O","j","includes","k","_ref","services","initial","id","predictableActionArguments","states","init","always","target","cond","signIn","exit","edit","entry","on","SUBMIT","actions","CHANGE","FEDERATED_SIGN_IN","federatedSignIn","tags","invoke","src","onError","submit","onDone","verifying","resolved","rejected","autoSignIn","pending","AUTO_SIGN_IN","AUTO_SIGN_IN_FAILURE","confirmSignIn","SIGN_IN","forceNewPassword","type","validation","valid","invalid","BLUR","idle","validate","setupTOTP","getTotpSecretCode","verifyUser","SKIP","confirmVerifyUser","data","user","intent","redirectIntent","authAttributes","guards","shouldAutoSignIn","shouldAutoSubmit","shouldConfirmSignIn","shouldForceChangePassword","shouldRedirectToConfirmResetPassword","code","shouldRedirectToConfirmSignUp","shouldRequestVerification","_t$data","unverified","verified","shouldSetupTOTP","_regeneratorRuntime","mark","_callee","_t$authAttributes","_t$formValues","wrap","_callee$","_context","prev","next","formValues","Object","assign","username","password","handleSignIn","abrupt","sent","stop","_callee2","_callee2$","_context2","challengeName","confirmation_code","handleConfirmSignIn","mfaType","currentAuthenticatedUser","_callee3","_t","_callee3$","_context3","confirm_password","phone_number","country_code","concat","replace","completeNewPassword","t0","Promise","reject","_callee4","_callee4$","_context4","verifyTotpToken","_callee5","_callee5$","_context5","_callee6","_callee6$","_context6","provider","checkVerifiedContact","_callee7","_callee7$","_context7","verifiedContact","_callee8","_callee8$","_context8","unverifiedAttr","verifyCurrentUserAttribute","attributeToVerify","_callee9","_callee9$","_context9","verifyCurrentUserAttributeSubmit","validateFields","_callee10","_callee10$","_context10","touched","passwordSettings","validateFormPassword","validateConfirmPassword","signInActor"],"sources":["/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@aws-amplify/ui/dist/esm/machines/authenticator/actors/signIn.mjs"],"sourcesContent":["import{__awaiter as e,__rest as t}from\"tslib\";import{Auth as r}from\"aws-amplify\";import n from\"lodash/get.js\";import{createMachine as o,sendUpdate as i}from\"xstate\";import{runValidators as s}from\"../../../validators/index.mjs\";import{clearAttributeToVerify as a,clearChallengeName as d,clearRequiredAttributes as c,clearError as l,clearFormValues as u,clearTouched as g,clearUnverifiedContactMethods as m,clearValidationError as f,handleInput as p,handleSubmit as h,handleBlur as I,parsePhoneNumber as v,setChallengeName as S,setConfirmResetPasswordIntent as A,setConfirmSignUpIntent as U,setRequiredAttributes as E,setCredentials as y,setFieldErrors as T,setRemoteError as C,setTotpSecretCode as b,setUnverifiedContactMethods as N,setUser as w,setUsernameAuthAttributes as R}from\"../actions.mjs\";import{defaultServices as P}from\"../defaultServices.mjs\";import{isEmpty as V}from\"../../../utils/index.mjs\";const _=[\"SMS_MFA\",\"SOFTWARE_TOKEN_MFA\"],F=e=>n(e,\"data.challengeName\"),O=(e,t)=>e===t,j=e=>_.includes(e);function k({services:n}){return o({initial:\"init\",id:\"signInActor\",predictableActionArguments:!0,states:{init:{always:[{target:\"autoSignIn.submit\",cond:\"shouldAutoSubmit\"},{target:\"autoSignIn\",cond:\"shouldAutoSignIn\"},{target:\"signIn\"}]},signIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},CHANGE:{actions:\"handleInput\"},FEDERATED_SIGN_IN:\"federatedSignIn\"}},federatedSignIn:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"federatedSignIn\",onError:{actions:\"setRemoteError\"}}},submit:{tags:[\"pending\"],entry:[\"parsePhoneNumber\",\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"verifying\"}],onError:[{cond:\"shouldRedirectToConfirmSignUp\",actions:[\"setCredentials\",\"setConfirmSignUpIntent\"],target:\"rejected\"},{cond:\"shouldRedirectToConfirmResetPassword\",actions:[\"setUsernameAuthAttributes\",\"setConfirmResetPasswordIntent\"],target:\"rejected\"},{actions:\"setRemoteError\",target:\"edit\"}]}},verifying:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"checkVerifiedContact\",onDone:[{cond:\"shouldRequestVerification\",target:\"#signInActor.verifyUser\",actions:\"setUnverifiedContactMethods\"},{target:\"resolved\"}],onError:{actions:\"setRemoteError\",target:\"edit\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},autoSignIn:{initial:\"pending\",states:{pending:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],on:{AUTO_SIGN_IN:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],AUTO_SIGN_IN_FAILURE:{actions:\"setRemoteError\",target:\"pending\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"signIn\",onDone:[{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldForceChangePassword\",actions:[\"setUser\",\"setChallengeName\",\"setRequiredAttributes\"],target:\"#signInActor.forceNewPassword\"},{actions:\"setUser\",target:\"#signInActor.resolved\"}],onError:{actions:\"setRemoteError\",target:\"#signInActor.signIn\"}}},resolved:{always:\"#signInActor.resolved\"},rejected:{always:\"#signInActor.rejected\"}}},confirmSignIn:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"confirmSignIn\",onDone:{target:\"#signInActor.resolved\",actions:[\"setUser\",\"clearChallengeName\",\"clearRequiredAttributes\"]},onError:{target:\"edit\",actions:\"setRemoteError\"}}}}},forceNewPassword:{type:\"parallel\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{validation:{initial:\"pending\",states:{pending:{invoke:{src:\"validateFields\",onDone:{target:\"valid\",actions:\"clearValidationError\"},onError:{target:\"invalid\",actions:\"setFieldErrors\"}}},valid:{entry:\"sendUpdate\"},invalid:{entry:\"sendUpdate\"}},on:{SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\",target:\".pending\"},BLUR:{actions:\"handleBlur\",target:\".pending\"}}},submit:{initial:\"idle\",entry:\"clearError\",states:{idle:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"validate\"}}},validate:{entry:\"sendUpdate\",invoke:{src:\"validateFields\",onDone:{target:\"pending\",actions:\"clearValidationError\"},onError:{target:\"idle\",actions:\"setFieldErrors\"}}},pending:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"forceNewPassword\",onDone:[{cond:\"shouldConfirmSignIn\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.confirmSignIn\"},{cond:\"shouldSetupTOTP\",actions:[\"setUser\",\"setChallengeName\"],target:\"#signInActor.setupTOTP\"},{target:\"resolved\",actions:[\"setUser\",\"setCredentials\"]}],onError:{target:\"idle\",actions:\"setRemoteError\"}}},resolved:{type:\"final\",always:\"#signInActor.resolved\"}}}}},setupTOTP:{initial:\"getTotpSecretCode\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{getTotpSecretCode:{invoke:{src:\"getTotpSecretCode\",onDone:{target:\"edit\",actions:\"setTotpSecretCode\"},onError:{target:\"edit\",actions:\"setRemoteError\"}}},edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SIGN_IN:\"#signInActor.signIn\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:[\"sendUpdate\",\"clearError\"],invoke:{src:\"verifyTotpToken\",onDone:{actions:[\"clearChallengeName\",\"clearRequiredAttributes\"],target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},verifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"verifyUser\",onDone:{target:\"#signInActor.confirmVerifyUser\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},confirmVerifyUser:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearUnverifiedContactMethods\",\"clearAttributeToVerify\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},SKIP:\"#signInActor.resolved\",CHANGE:{actions:\"handleInput\"}}},submit:{tags:[\"pending\"],entry:\"clearError\",invoke:{src:\"confirmVerifyUser\",onDone:{target:\"#signInActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"edit\"}}}}},resolved:{type:\"final\",data:e=>({user:e.user})},rejected:{type:\"final\",data:(e,t)=>({intent:e.redirectIntent,authAttributes:e.authAttributes})}}},{actions:{clearAttributeToVerify:a,clearChallengeName:d,clearRequiredAttributes:c,clearError:l,clearFormValues:u,clearTouched:g,clearUnverifiedContactMethods:m,clearValidationError:f,handleInput:p,handleSubmit:h,handleBlur:I,parsePhoneNumber:v,setChallengeName:S,setConfirmResetPasswordIntent:A,setConfirmSignUpIntent:U,setRequiredAttributes:E,setCredentials:y,setFieldErrors:T,setRemoteError:C,setTotpSecretCode:b,setUnverifiedContactMethods:N,setUser:w,setUsernameAuthAttributes:R,sendUpdate:i()},guards:{shouldAutoSignIn:e=>\"autoSignIn\"===(null==e?void 0:e.intent),shouldAutoSubmit:e=>\"autoSignInSubmit\"===(null==e?void 0:e.intent),shouldConfirmSignIn:(e,t)=>j(F(t)),shouldForceChangePassword:(e,t)=>O(F(t),\"NEW_PASSWORD_REQUIRED\"),shouldRedirectToConfirmResetPassword:(e,t)=>\"PasswordResetRequiredException\"===t.data.code,shouldRedirectToConfirmSignUp:(e,t)=>\"UserNotConfirmedException\"===t.data.code,shouldRequestVerification:(e,t)=>{const{unverified:r,verified:n}=t.data;return V(n)&&!V(r)},shouldSetupTOTP:(e,t)=>O(F(t),\"MFA_SETUP\")},services:{signIn(t){return e(this,void 0,void 0,(function*(){const{authAttributes:e={},formValues:r={}}=t,o=Object.assign(Object.assign({},e),r),{username:i,password:s}=o;return yield n.handleSignIn({username:i,password:s})}))},confirmSignIn(t){return e(this,void 0,void 0,(function*(){const{challengeName:e,user:o}=t,{confirmation_code:i}=t.formValues,s=j(e)?e:void 0;return yield n.handleConfirmSignIn({user:o,code:i,mfaType:s}),yield r.currentAuthenticatedUser()}))},forceNewPassword(n){return e(this,void 0,void 0,(function*(){const{user:e,formValues:o}=n;let i,{password:s,confirm_password:a,phone_number:d,country_code:c}=o,l=t(o,[\"password\",\"confirm_password\",\"phone_number\",\"country_code\"]);d&&(i=`${c}${d}`.replace(/[^A-Z0-9+]/gi,\"\"),l=Object.assign(Object.assign({},l),{phone_number:i}));try{const t=yield r.completeNewPassword(e,s,l);return t.challengeName?t:r.currentAuthenticatedUser()}catch(e){return Promise.reject(e)}}))},getTotpSecretCode(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return r.setupTOTP(e)}))},verifyTotpToken(t){return e(this,void 0,void 0,(function*(){const{formValues:e,user:n}=t,{confirmation_code:o}=e;return r.verifyTotpToken(n,o)}))},federatedSignIn(t,n){return e(this,void 0,void 0,(function*(){const{provider:e}=n.data;return yield r.federatedSignIn({provider:e})}))},checkVerifiedContact(t){return e(this,void 0,void 0,(function*(){const{user:e}=t;return yield r.verifiedContact(e)}))},verifyUser(t){return e(this,void 0,void 0,(function*(){const{unverifiedAttr:e}=t.formValues,n=yield r.verifyCurrentUserAttribute(e);return t.attributeToVerify=e,n}))},confirmVerifyUser(t){return e(this,void 0,void 0,(function*(){const{attributeToVerify:e}=t,{confirmation_code:n}=t.formValues;return yield r.verifyCurrentUserAttributeSubmit(e,n)}))},validateFields(t){return e(this,void 0,void 0,(function*(){return s(t.formValues,t.touched,t.passwordSettings,[P.validateFormPassword,P.validateConfirmPassword])}))}}})}export{k as signInActor};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}