{"ast":null,"code":"import _slicedToArray from \"/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport { __awaiter } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport { Auth } from 'aws-amplify';\nimport { getActorContext, getSortedFormFields, isString, areEmptyArrays, areEmptyObjects } from '@aws-amplify/ui';\nimport { isComponentRouteKey } from '../utils.mjs';\nvar defaultComparator = function defaultComparator() {\n  return false;\n};\n/**\n * Does an ordering and shallow comparison of each array value,\n * plus a value equality check for empty objects and arrays.\n */\nfunction areSelectorDepsEqual(currentDeps, nextDeps) {\n  if (currentDeps.length !== nextDeps.length) {\n    return false;\n  }\n  return currentDeps.every(function (currentDep, index) {\n    var nextDep = nextDeps[index];\n    if (areEmptyArrays(currentDep, nextDep) || areEmptyObjects(currentDep, nextDep)) {\n      return true;\n    }\n    return currentDep === nextDep;\n  });\n}\nvar getComparator = function getComparator(selector) {\n  return function (currentFacade, nextFacade) {\n    var currentSelectorDeps = selector(currentFacade);\n    var nextSelectorDeps = selector(nextFacade);\n    // Shallow compare the array values\n    return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n  };\n};\nvar getQRFields = function getQRFields(state) {\n  var _a, _b, _c;\n  return Object.assign({}, (_c = (_b = (_a = getActorContext(state)) === null || _a === void 0 ? void 0 : _a.formFields) === null || _b === void 0 ? void 0 : _b.setupTOTP) === null || _c === void 0 ? void 0 : _c.QR);\n};\nvar getTotpSecretCodeCallback = function getTotpSecretCodeCallback(user) {\n  return function getTotpSecretCode() {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Auth.setupTOTP(user);\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n  };\n};\nvar flattenFormFields = function flattenFormFields(fields) {\n  return fields.flatMap(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      options = _ref2[1];\n    return Object.assign({\n      name: name\n    }, options);\n  });\n};\nvar convertContactMethodsToFields = function convertContactMethodsToFields(unverifiedContactMethods) {\n  return unverifiedContactMethods && Object.entries(unverifiedContactMethods).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      name = _ref4[0],\n      value = _ref4[1];\n    var valueIsString = isString(value);\n    if (!valueIsString || !name) {\n      return {};\n    }\n    return {\n      name: name,\n      label: value,\n      type: 'radio',\n      value: value\n    };\n  });\n};\n/**\n * Retrieves default and custom (RWA only, to be updated) form field values from state machine\n * for subcomponent routes that render fields\n */\nvar getMachineFields = function getMachineFields(route, state, unverifiedContactMethods) {\n  if (isComponentRouteKey(route)) {\n    return route === 'verifyUser' ? convertContactMethodsToFields(unverifiedContactMethods) : flattenFormFields(getSortedFormFields(route, state));\n  }\n  return [];\n};\nexport { areSelectorDepsEqual, defaultComparator, getComparator, getMachineFields, getQRFields, getTotpSecretCodeCallback };","map":{"version":3,"names":["__awaiter","Auth","getActorContext","getSortedFormFields","isString","areEmptyArrays","areEmptyObjects","isComponentRouteKey","defaultComparator","areSelectorDepsEqual","currentDeps","nextDeps","length","every","currentDep","index","nextDep","getComparator","selector","currentFacade","nextFacade","currentSelectorDeps","nextSelectorDeps","getQRFields","state","_a","_b","_c","Object","assign","formFields","setupTOTP","QR","getTotpSecretCodeCallback","user","getTotpSecretCode","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","sent","stop","flattenFormFields","fields","flatMap","_ref","_ref2","_slicedToArray","name","options","convertContactMethodsToFields","unverifiedContactMethods","entries","map","_ref3","_ref4","value","valueIsString","label","type","getMachineFields","route"],"sources":["/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@aws-amplify/ui-react-core/dist/esm/Authenticator/hooks/useAuthenticator/utils.mjs"],"sourcesContent":["import { __awaiter } from '../../../node_modules/tslib/tslib.es6.mjs';\nimport { Auth } from 'aws-amplify';\nimport { getActorContext, getSortedFormFields, isString, areEmptyArrays, areEmptyObjects } from '@aws-amplify/ui';\nimport { isComponentRouteKey } from '../utils.mjs';\n\nconst defaultComparator = () => false;\n/**\n * Does an ordering and shallow comparison of each array value,\n * plus a value equality check for empty objects and arrays.\n */\nfunction areSelectorDepsEqual(currentDeps, nextDeps) {\n    if (currentDeps.length !== nextDeps.length) {\n        return false;\n    }\n    return currentDeps.every((currentDep, index) => {\n        const nextDep = nextDeps[index];\n        if (areEmptyArrays(currentDep, nextDep) ||\n            areEmptyObjects(currentDep, nextDep)) {\n            return true;\n        }\n        return currentDep === nextDep;\n    });\n}\nconst getComparator = (selector) => (currentFacade, nextFacade) => {\n    const currentSelectorDeps = selector(currentFacade);\n    const nextSelectorDeps = selector(nextFacade);\n    // Shallow compare the array values\n    return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n};\nconst getQRFields = (state) => {\n    var _a, _b, _c;\n    return (Object.assign({}, (_c = (_b = (_a = getActorContext(state)) === null || _a === void 0 ? void 0 : _a.formFields) === null || _b === void 0 ? void 0 : _b.setupTOTP) === null || _c === void 0 ? void 0 : _c.QR));\n};\nconst getTotpSecretCodeCallback = (user) => function getTotpSecretCode() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield Auth.setupTOTP(user);\n    });\n};\nconst flattenFormFields = (fields) => fields.flatMap(([name, options]) => (Object.assign({ name }, options)));\nconst convertContactMethodsToFields = (unverifiedContactMethods) => {\n    return (unverifiedContactMethods &&\n        Object.entries(unverifiedContactMethods).map(([name, value]) => {\n            const valueIsString = isString(value);\n            if (!valueIsString || !name) {\n                return {};\n            }\n            return { name, label: value, type: 'radio', value };\n        }));\n};\n/**\n * Retrieves default and custom (RWA only, to be updated) form field values from state machine\n * for subcomponent routes that render fields\n */\nconst getMachineFields = (route, state, unverifiedContactMethods) => {\n    if (isComponentRouteKey(route)) {\n        return route === 'verifyUser'\n            ? convertContactMethodsToFields(unverifiedContactMethods)\n            : flattenFormFields(getSortedFormFields(route, state));\n    }\n    return [];\n};\n\nexport { areSelectorDepsEqual, defaultComparator, getComparator, getMachineFields, getQRFields, getTotpSecretCodeCallback };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}