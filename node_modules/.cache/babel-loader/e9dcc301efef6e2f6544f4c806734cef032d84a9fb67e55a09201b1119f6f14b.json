{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nexport var getCanonicalUri = function getCanonicalUri(pathname) {\n  return pathname ? encodeURIComponent(pathname).replace(/%2F/g, '/') : '/';\n};","map":{"version":3,"names":["getCanonicalUri","pathname","encodeURIComponent","replace"],"sources":["/Users/nicolasarchila/Documents/Arquitectura/amplify/juanv2/react-amplify-poc/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nexport var getCanonicalUri = function (pathname) {\n    return pathname ? encodeURIComponent(pathname).replace(/%2F/g, '/') : '/';\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,eAAe,GAAG,SAAlBA,eAAeA,CAAaC,QAAQ,EAAE;EAC7C,OAAOA,QAAQ,GAAGC,kBAAkB,CAACD,QAAQ,CAAC,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG;AAC7E,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}